{"version":3,"sources":["api.js","services/authentication.service.js","components/Navbar.js","context/AuthContext.js","containers/Layout.js","components/Loader.js","components/Message.js","helpers/hooks.js","components/Tags.js","components/Post.js","components/Search.js","containers/PostList.js","helpers/hookList.js","containers/Login.js","containers/PostCreate.js","components/DeleteModal.js","containers/PostDetail.js","containers/PostUpdate.js","containers/Signup.js","App.js","serviceWorker.js","index.js"],"names":["baseURL","api","auth","login","register","posts","list","retrieve","slug","create","update","delete","like","authAxios","axios","interceptors","request","use","config","newConfig","token","localStorage","getItem","headers","authenticationService","isAuthenticated","undefined","logout","removeItem","username","password","post","then","res","setItem","data","key","navigate","signup","email","password1","password2","console","log","Navbar","props","useState","current","setCurrent","isLoggedIn","theme","onClick","e","selectedKeys","mode","Item","icon","HomeOutlined","to","AuthContext","createContext","Layout","children","useContext","setAuth","className","Container","Segment","Dimmer","active","inverted","Loader","Image","src","message","color","Message","useFetch","url","initialState","setData","loading","setLoading","error","setError","useEffect","a","ax","get","fetchData","Tags","tag","tags","split","map","index","Post","ordered","itemLayout","pagination","onChange","page","pageSize","dataSource","renderItem","item","title","Meta","href","description","Search","results","Input","searchResults","setSearchResults","placeholder","onSearch","target","value","enterButton","PostList","query","useFetchList","result","setResult","dataFilter","filteredResults","filter","includes","info","length","Login","setUsername","setPassword","path","text","bordered","hoverable","name","initialValues","remember","rules","required","type","prefix","UserOutlined","Password","LockOutlined","iconRender","visible","EyeTwoTone","EyeInvisibleOutlined","htmlType","preventDefault","catch","disabled","block","PostCreate","setTitle","setDescription","setTags","problem","setProblem","solution","setSolution","thumbnail","setThumbnail","fileInputRef","useRef","Panel","Collapse","mdParser","MarkdownIt","iframe","Form","onSubmit","formData","FormData","append","err","Field","content","trigger","QuestionCircleOutlined","accordion","header","rows","dangerouslySetInnerHTML","__html","style","height","renderHTML","render","Button","fluid","labelPosition","click","ref","hidden","files","primary","DeleteModal","postSlug","setVisisble","handleSubmit","handleCancel","onOk","onCancel","footer","Renderers","blockquote","code","PostDetail","Date","updated_at","toLocaleDateString","source","renderers","Divider","is_author","PostUpdateForm","initialTitle","initialDescription","initialSolution","initialThumbnail","initialProblem","initialTags","currentThumbnail","size","put","PostUpdate","negative","Signup","setEmail","confirmPassword","setConfirmPassword","onFinish","MailOutlined","CheckCircleOutlined","history","createBrowserHistory","App","Provider","exact","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.92a78656.chunk.js","sourcesContent":["const baseURL = process.env.NODE_ENV === \"development\" ? \"http://localhost:8000\" : \"https://domain.com\"\r\n\r\nexport const api = {\r\n\r\n    auth: {\r\n        login: `${baseURL}/dj-rest-auth/login/`,\r\n        register: `${baseURL}/dj-rest-auth/registration/`,\r\n    },\r\n\r\n    posts: {\r\n        list: `${baseURL}/api/posts/`,\r\n        retrieve: slug => `${baseURL}/api/posts/${slug}`,\r\n        create: `${baseURL}/api/posts/create/`,\r\n        update: slug => `${baseURL}/api/posts/${slug}/update/`,\r\n        delete: slug => `${baseURL}/api/posts/${slug}/delete/`,\r\n        like: slug => `${baseURL}/api/posts/${slug}/like`\r\n    }\r\n}","import { navigate } from '@reach/router'\r\nimport axios from 'axios'\r\nimport { api } from '../api'\r\n\r\n\r\nconst authAxios = axios.create()\r\n\r\n// Our own instance of axios which will always be authenticated\r\nauthAxios.interceptors.request.use(config => {\r\n    const newConfig = config\r\n    const token = localStorage.getItem(\"token\")\r\n    newConfig.headers = {\r\n        \"Authorization\": `Token ${token}`\r\n    }\r\n    return newConfig\r\n})\r\n\r\nfunction isAuthenticated() {\r\n    const token = localStorage.getItem(\"token\")\r\n    return token !== null && token !== undefined\r\n}\r\n\r\nfunction login(username, password) {\r\n    return axios.post(api.auth.login, {\r\n        username, password\r\n    })\r\n    .then(res => {\r\n        localStorage.setItem(\"token\", res.data.key)\r\n        navigate(\"/\")\r\n        return res\r\n    })\r\n}\r\n\r\nfunction signup(username, email, password1, password2) {\r\n    return axios.post(api.auth.register, {\r\n        username, email, password1, password2\r\n    })\r\n    .then(res => {\r\n        console.log(res.data)\r\n        localStorage.setItem(\"token\", res.data.key)\r\n        navigate('/')\r\n        return res\r\n    })\r\n}\r\n\r\nfunction logout() {\r\n    localStorage.removeItem(\"token\");\r\n}\r\n\r\nconst authenticationService = {\r\n    isAuthenticated: isAuthenticated(),\r\n    logout,\r\n    login,\r\n    signup,\r\n}\r\n\r\nexport { authAxios, authenticationService }","import React, { useState } from 'react'\r\nimport { Link } from '@reach/router'\r\nimport { Menu } from 'antd';\r\nimport { HomeOutlined } from '@ant-design/icons';\r\nimport { authenticationService } from '../services';\r\n\r\nconst Navbar = (props) => {\r\n\r\n    const [current, setCurrent] = useState(\"mail\");\r\n\r\n    const { isLoggedIn, logout } = props\r\n\r\n    const handleClick = e => {\r\n        console.log('click ', e);\r\n        setCurrent( e.key );\r\n    };\r\n\r\n    return (\r\n        <Menu theme=\"dark\" onClick={handleClick} selectedKeys={[current]} mode=\"horizontal\">\r\n            <Menu.Item key=\"home\" icon={<HomeOutlined />}>\r\n                <Link to={'/'}>Solutions</Link>\r\n            </Menu.Item>\r\n            {isLoggedIn && <Menu.Item key=\"create\">\r\n                <Link to={'/create'}>Create a post</Link>\r\n            </Menu.Item>}\r\n            {isLoggedIn && <Menu.Item key=\"logout\" onClick={() => {\r\n                return (\r\n                    authenticationService.logout(),\r\n                    logout(),\r\n                    console.log(authenticationService.isAuthenticated)\r\n                )\r\n            }} >\r\n                Logout\r\n            </Menu.Item>}\r\n            {!isLoggedIn && <Menu.Item key=\"login\" >\r\n                <Link to={'/login'}>Login</Link>\r\n            </Menu.Item>}\r\n            {!isLoggedIn && <Menu.Item key=\"signup\" >\r\n                <Link to={'/signup'}>Signup</Link>\r\n            </Menu.Item>}\r\n        </Menu>\r\n    );\r\n}\r\n\r\nexport default Navbar\r\n\r\n","import { createContext } from 'react'\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport default AuthContext","import React, { useContext } from 'react';\r\nimport Navbar from '../components/Navbar';\r\nimport { Container } from 'semantic-ui-react'\r\nimport AuthContext from '../context/AuthContext';\r\nimport { authenticationService } from '../services';\r\nimport { navigate } from '@reach/router';\r\n\r\nconst Layout = ({ children }) => {\r\n\r\n    const { auth, setAuth } = useContext(AuthContext);\r\n    console.log(\"auth => \" + auth)\r\n    \r\n    const logout = () => {\r\n        setAuth(false)\r\n        navigate('/')\r\n        console.log(\"layout auth => \", authenticationService.isAuthenticated)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Navbar className=\"nav-bar\" isLoggedIn={auth} logout={logout} />\r\n            <Container className=\"main-container\">\r\n                {children}\r\n            </Container>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Layout;\r\n","import React from 'react';\r\nimport { Dimmer, Loader, Image, Segment } from 'semantic-ui-react'\r\n\r\nexport default () => {\r\n    return (\r\n        <div>\r\n            <Segment>\r\n                <Dimmer active inverted>\r\n                    <Loader inverted>Loading</Loader>\r\n                </Dimmer>\r\n                <Image src='https://react.semantic-ui.com/images/wireframe/short-paragraph.png' />\r\n            </Segment>\r\n        </div>\r\n    );\r\n}","import React from 'react'\r\nimport { Message } from 'semantic-ui-react'\r\n\r\nexport default ({ message, color}) => (\r\n    <Message color={color}>\r\n        {message}\r\n    </Message>\r\n)\r\n","import { useContext, useEffect, useState } from 'react';\r\nimport axios from 'axios'\r\nimport { authAxios } from '../services';\r\nimport AuthContext from '../context/AuthContext';\r\n\r\nfunction useFetch(url, initialState=null) {\r\n    const [data, setData] = useState(initialState);\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    const { auth } = useContext(AuthContext);\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            setLoading(true)\r\n            try {\r\n                let ax = axios\r\n                if(auth){\r\n                    ax = authAxios\r\n                } \r\n                const res = await ax.get(url)\r\n                setData(res.data)\r\n                setLoading(false)\r\n            } catch (error) {\r\n                console.log(\"eerrrrror => \" + error)\r\n                setError(error.message)\r\n                setLoading(false)\r\n            }\r\n        }\r\n        fetchData()\r\n    }, []);\r\n\r\n    return {\r\n        data, \r\n        loading,\r\n        error\r\n    }\r\n}\r\n\r\nexport {useFetch}","import React from 'react';\r\nimport { Tag } from 'antd';\r\n\r\nconst Tags = ({ tags }) => {\r\n    let tag = tags.split(\" \")\r\n\r\n    return (\r\n        <>\r\n            {tag.map((tags, index) => {\r\n                return (\r\n                    <Tag key={index} className=\"tags\"  >\r\n                        {tags}\r\n                    </Tag>\r\n                )\r\n            })}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Tags;\r\n","import React from 'react';\r\nimport { List } from 'antd';\r\nimport Tags from './Tags';\r\n\r\nconst Post = (props) => {\r\n    console.log(\"datataaa\", props.data)\r\n\r\n    return (\r\n        <div>\r\n            <List \r\n            ordered=\"list\"\r\n                itemLayout=\"vertical\"\r\n                pagination={{\r\n                    onChange: page => {\r\n                        console.log(page);\r\n                    },\r\n                    pageSize: 6,\r\n                }}\r\n                dataSource={props.data}\r\n                renderItem={item => (\r\n                    <List.Item\r\n                        className=\"list-block\"\r\n                        key={item.title}\r\n                    >\r\n                        <List.Item.Meta\r\n                            className=\"mb-2\"\r\n                            title={<a className='text-white block-header' href={`/posts/${item.slug}`}>{item.title}</a>}\r\n                            description={<h6 className=\"block-desc\">{item.description}</h6>}\r\n                        />\r\n                        <Tags tags={item.tags} />\r\n                    </List.Item>\r\n                )}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Post;\r\n","import React, { useState } from 'react';\r\nimport { Input } from 'antd';\r\n\r\nconst Search = ({results}) => {\r\n    const { Search } = Input;\r\n    const [searchResults, setSearchResults] = useState([]);\r\n    \r\n    const handleSearch = () => {\r\n        results(searchResults)\r\n        console.log(searchResults)\r\n    }   \r\n\r\n    return (\r\n        <div>\r\n            <Search\r\n                className=\"input\"\r\n                placeholder=\"Search titles (case sensitive)\"\r\n                onSearch={handleSearch}\r\n                onChange={e => setSearchResults(e.target.value)}\r\n                enterButton />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Search;\r\n","import React, { useState } from 'react';\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { api } from '../api'\r\nimport { useFetchList } from '../helpers'\r\nimport Post from '../components/Post';\r\nimport Search from '../components/Search';\r\n\r\nconst PostList = () => {\r\n    let query = \"\"\r\n    const { data, loading, error } = useFetchList(api.posts.list) // Custom hook\r\n    const [result, setResult] = useState([]);\r\n\r\n\r\n    const submitResult = (info) => {\r\n        query = info\r\n        console.log(\"query => \", query)\r\n        dataFilter()\r\n    }\r\n\r\n    const dataFilter = () => {\r\n        let filteredResults = data.filter(data => data.title.includes(query))\r\n        setResult(filteredResults)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1 className=\"block-title\">Problems</h1>\r\n            {error && <Message color=\"red\" message={error} />}\r\n            {loading && <Loader />}\r\n            <Search results={submitResult} />\r\n            {\r\n                !loading &&\r\n                <>\r\n                    {result.length == 0 ? <Post data={data} /> : <Post data={result} />}\r\n                </>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PostList;\r\n\r\n","import { useEffect, useState } from 'react';\r\nimport axios from 'axios'\r\n\r\nfunction useFetchList(url) {\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            setLoading(true)\r\n            try {\r\n                const res = await axios.get(url)\r\n                setData(res.data)\r\n                setLoading(false)\r\n            } catch (error) {\r\n                setError(error.message)\r\n                setLoading(false)\r\n            }\r\n        }\r\n        fetchData()\r\n    }, []);\r\n\r\n    return {\r\n        data, \r\n        loading,\r\n        error\r\n    }\r\n}\r\n\r\nexport {useFetchList}","import React, { useContext, useState } from 'react'\r\nimport { Container } from 'semantic-ui-react'\r\nimport { Card, Button, Input, Form } from 'antd'\r\nimport { Link, navigate } from '@reach/router'\r\nimport Message from '../components/Message'\r\nimport { authenticationService } from '../services'\r\nimport AuthContext from '../context/AuthContext'\r\nimport {\r\n    EyeInvisibleOutlined,\r\n    EyeTwoTone,\r\n    LockOutlined,\r\n    UserOutlined\r\n} from '@ant-design/icons'\r\nimport PostList from './PostList'\r\n\r\nconst Login = () => {\r\n    const [error, setError] = useState(null)\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const [username, setUsername] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const { auth, setAuth } = useContext(AuthContext)\r\n\r\n    const handleSubmit = e => {\r\n        setLoading(true)\r\n        e.preventDefault()\r\n        authenticationService\r\n            .login(username, password)\r\n            .then(res => {\r\n                localStorage.setItem('token', res.data.key)\r\n                setLoading(false)\r\n                setAuth(true)\r\n                navigate('/')\r\n            })\r\n            .catch(error => {\r\n                setLoading(false)\r\n                setError('Invalid credentials, please try again.' || error)\r\n            })\r\n    }\r\n\r\n    if (auth) {\r\n        navigate('/')\r\n        return <PostList path='/'/>\r\n    }\r\n\r\n    return (\r\n        <Container text>\r\n            <Card bordered={false} className='join' hoverable>\r\n                <h2 className='create-title'>Login to your account</h2>\r\n                {error && <Message color='red' message={error} />}\r\n                <Form\r\n                    name='basic'\r\n                    initialValues={{ remember: true }}\r\n                >\r\n                    <Form.Item\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Please input your username!'\r\n                            }\r\n                        ]}\r\n                    >\r\n                        <label className='create-label text-white'>Username</label>\r\n                        <Input\r\n                            type='text'\r\n                            value={username}\r\n                            onChange={e => setUsername(e.target.value)}\r\n                            prefix={<UserOutlined />}\r\n                        />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Please input your password!'\r\n                            }\r\n                        ]}\r\n                    >\r\n                        <label className='create-label text-white'>Password</label>\r\n                        <Input.Password\r\n                            type='password'\r\n                            value={password}\r\n                            onChange={e => setPassword(e.target.value)}\r\n                            prefix={<LockOutlined />}\r\n                            iconRender={visible =>\r\n                                visible ? <EyeTwoTone /> : <EyeInvisibleOutlined />\r\n                            }\r\n                        />\r\n                    </Form.Item>\r\n                    <Form.Item>\r\n                        <Button\r\n                            type='primary'\r\n                            htmlType='submit'\r\n                            onClick={handleSubmit}\r\n                            loading={loading}\r\n                            disabled={loading}\r\n                            block\r\n                        >\r\n                            Login\r\n                        </Button>\r\n                    </Form.Item>\r\n                    <Link to={'/signup'}>Signup now!</Link>\r\n                </Form>\r\n            </Card>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import React, { useContext, useRef, useState } from 'react'\r\nimport MarkdownIt from 'markdown-it'\r\nimport MdEditor from 'react-markdown-editor-lite'\r\nimport 'react-markdown-editor-lite/lib/index.css';\r\nimport { Button, Form } from 'semantic-ui-react'\r\nimport { navigate } from \"@reach/router\"\r\nimport Message from '../components/Message';\r\nimport { api } from '../api'\r\nimport { authAxios, authenticationService } from '../services'\r\nimport Login from './Login';\r\nimport AuthContext from '../context/AuthContext';\r\nimport { Popover, Card, Collapse } from 'antd';\r\nimport { QuestionCircleOutlined } from '@ant-design/icons';\r\n\r\n\r\nconst PostCreate = () => {\r\n    const [error, setError] = useState(null);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const [title, setTitle] = useState(\"\");\r\n    const [description, setDescription] = useState(\"\");\r\n    const [tags, setTags] = useState(\"\");\r\n    const [problem, setProblem] = useState(\"\");\r\n    const [solution, setSolution] = useState(\"\");\r\n    const [thumbnail, setThumbnail] = useState(null);\r\n\r\n    const fileInputRef = useRef()\r\n\r\n    const { auth } = useContext(AuthContext);\r\n    const { Panel } = Collapse;\r\n\r\n    const mdParser = new MarkdownIt(/* Markdown-it options */);\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        setLoading(true)\r\n\r\n        const formData = new FormData()\r\n        if (thumbnail) formData.append('thumbnail', thumbnail)\r\n        formData.append(\"title\", title)\r\n        formData.append(\"description\", description)\r\n        formData.append(\"problem\", problem)\r\n        formData.append(\"content\", solution)\r\n        formData.append(\"tags\", tags)\r\n\r\n        authAxios\r\n            .post(api.posts.create, formData, {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data',\r\n                }\r\n            })\r\n            .then(res => {\r\n                setLoading(false)\r\n                navigate('/')\r\n            })\r\n            .catch(err => {\r\n                setError(\"Required fields - title, description, and markdown.\" || err)\r\n                setLoading(false)\r\n            })\r\n    }\r\n\r\n    if (!auth) {\r\n        console.log(authenticationService.isAuthenticated)\r\n        return <Login path='/login' />\r\n    }\r\n\r\n    function addIFrame() {\r\n        return {\r\n            __html: iframe\r\n        }\r\n    }\r\n\r\n    const iframe = '<iframe height=\"600px\" width=\"100%\" src=\"https://repl.it/@DotGrowen/Write-the-code?lite=true\" scrolling=\"no\" frameborder=\"no\" allowtransparency=\"true\" allowfullscreen=\"true\" sandbox=\"allow-forms allow-pointer-lock allow-popups allow-same-origin allow-scripts allow-modals\"></iframe>'\r\n\r\n    return (\r\n        <div>\r\n            <h2 className=\"create-title\">Create a new solution</h2>\r\n            {error && <Message color='red' message={error} />}\r\n            <Card bordered={false} className='create-join' hoverable>\r\n                <Form onSubmit={handleSubmit}>\r\n\r\n\r\n                    <Form.Field>\r\n                        <p className=\"create-label text-white\">Title</p>\r\n                        <input\r\n                            value={title}\r\n                            onChange={e => setTitle(e.target.value)}\r\n                            placeholder='Title of your problem'\r\n                        />\r\n                    </Form.Field>\r\n                    <Form.Field>\r\n                        <p className=\"create-label text-white\">Description</p>\r\n                        <input\r\n                            value={description}\r\n                            onChange={e => setDescription(e.target.value)}\r\n                            placeholder='Short description for your problem'\r\n                        />\r\n                    </Form.Field>\r\n                    <Form.Field>\r\n                        <div className=\"d-flex align-items-center justify-content-between\">\r\n                            <p className=\"create-label text-white\">Tags</p>\r\n                            <Popover content={`Enter with spaces, not commas ( Python JavaScript C# )`} trigger=\"click\">\r\n                                <QuestionCircleOutlined className=\"text-white\" />\r\n                            </Popover>\r\n                        </div>\r\n\r\n                        <input\r\n                            value={tags}\r\n                            onChange={e => setTags(e.target.value)}\r\n                            placeholder='Add some tags'\r\n                        />\r\n                    </Form.Field>\r\n\r\n                    <Collapse className=\"panels\" bordered={false} accordion>\r\n                        <Panel header=\"2. Create your solution\" key=\"2\">\r\n                            <Form.Field>\r\n                                <p className=\"create-label\">First solve the problem</p>\r\n                                <Card bordered={false} className='create-join' hoverable>\r\n                                    <textarea\r\n                                        rows=\"4\"\r\n                                        value={problem}\r\n                                        onChange={e => setProblem(e.target.value)}\r\n                                        placeholder='Enter Pseudocode'\r\n                                        className=\"textarea\"\r\n                                    />\r\n                                </Card>\r\n                            </Form.Field>\r\n                            <Form.Field>\r\n                                <p className=\"create-label\">Then write the code</p>\r\n                                <Card bordered={false} className='create-join' hoverable>\r\n                                    <div dangerouslySetInnerHTML={addIFrame()} />\r\n                                </Card>\r\n                            </Form.Field>\r\n                        </Panel>\r\n                        <Panel header=\"3. Save your work\" key=\"3\">\r\n                            <Form.Field>\r\n                                <p className=\"create-label\">Save your code here! <a href=\"https://guides.github.com/features/mastering-markdown/\">(Learn Markdown)</a></p>\r\n                                <Card bordered={false} className='create-join' hoverable>\r\n                                    <MdEditor\r\n                                        className=\"create-markdown\"\r\n                                        placeholder=\"\r\n                         Example code:\r\n                        ```\r\n                        import time\r\n                        # Quick, count to ten!\r\n                        for i in range(10):\r\n                        # (but not *too* quick)\r\n                        time.sleep(0.5)\r\n                        print(i)\r\n                        ```\r\n                        \"\r\n                                        value={solution}\r\n                                        style={{ height: \"500px\" }}\r\n                                        renderHTML={(text) => mdParser.render(text)}\r\n                                        onChange={({ text }) => setSolution(text)}\r\n                                    />\r\n                                </Card>\r\n                            </Form.Field>\r\n                            <Form.Field>\r\n                                <Button\r\n                                    fluid\r\n                                    type='button'\r\n                                    content='Choose a thumbnail'\r\n                                    labelPosition='left'\r\n                                    icon='file'\r\n                                    onClick={() => fileInputRef.current.click()}\r\n                                />\r\n                                {thumbnail && <Message color='blue' message={`Selected image ${thumbnail.name}`} />}\r\n                                <input\r\n                                    ref={fileInputRef}\r\n                                    type='file'\r\n                                    hidden\r\n                                    onChange={e => setThumbnail(e.target.files[0])}\r\n                                />\r\n                            </Form.Field>\r\n                            <Button primary fluid loading={loading} disabled={loading} type='submit'>Submit</Button>\r\n                        </Panel>\r\n                    </Collapse>\r\n\r\n                </Form>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PostCreate\r\n","import React, { useState } from 'react'\r\nimport { Image } from 'semantic-ui-react'\r\nimport Message from '../components/Message'\r\nimport { api } from '../api'\r\nimport { navigate } from '@reach/router'\r\nimport { authAxios } from '../services/authentication.service'\r\nimport { Modal, Button } from 'antd'\r\n\r\nconst DeleteModal = ({ title, postSlug, thumbnail }) => {\r\n    const [error, setError] = useState(null)\r\n    const [loading, setLoading] = useState(false)\r\n    const [visible, setVisisble] = useState(false)\r\n\r\n    function handleSubmit() {\r\n        setLoading(true)\r\n        authAxios\r\n            .delete(api.posts.delete(postSlug))\r\n            .then(res => {\r\n                setLoading(false)\r\n                navigate('/')\r\n            })\r\n            .catch(err => {\r\n                setError(err.message || err)\r\n                setLoading(false)\r\n            })\r\n    }\r\n\r\n    const showModal = () => {\r\n        setVisisble(true)\r\n    }\r\n\r\n    const handleCancel = e => {\r\n        console.log(e)\r\n        setVisisble(false)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Button\r\n                className='float-right btn-update btn'\r\n                loading={loading}\r\n                disabled={loading}\r\n                type='primary'\r\n                onClick={showModal}\r\n            >\r\n                Delete Post\r\n      </Button>\r\n            <Modal\r\n                className='text-center'\r\n                title={title}\r\n                visible={visible}\r\n                onOk={handleSubmit}\r\n                onCancel={handleCancel}\r\n                footer={[\r\n                    <Button className='btn-modal2 btn' key='back' onClick={handleCancel}>\r\n                        Return\r\n          </Button>,\r\n                    <Button\r\n                        className='btn-modal1 btn'\r\n                        key='submit'\r\n                        type='primary'\r\n                        loading={loading}\r\n                        onClick={handleSubmit}\r\n                    >\r\n                        Confirm Deletion\r\n          </Button>\r\n                ]}\r\n            >\r\n                <Image className='mx-auto' src={thumbnail} />\r\n                {error && <Message color='red' message={error} />}\r\n                <h3 className='text-center mt-3 text-dark'>\r\n                    Are you sure you want to delete this post?\r\n        </h3>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DeleteModal;\r\n","import React from 'react'\r\nimport { Container, Divider, Image } from 'semantic-ui-react'\r\nimport ReactMarkdown from 'react-markdown'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { api } from '../api'\r\nimport { useFetch } from '../helpers'\r\nimport { Link } from '@reach/router'\r\nimport { Button } from 'antd'\r\nimport DeleteModal from '../components/DeleteModal'\r\n\r\nconst Blockquote = props => {\r\n    console.log(props)\r\n    return (\r\n        <Message\r\n            color='black'\r\n            message={props.value ? props.value : props.children}\r\n        />\r\n    )\r\n}\r\n\r\nconst Code = props => {\r\n    console.log(props)\r\n    return (\r\n        <pre className='code-blocks'>\r\n            <code>{props.value ? props.value : props.children}</code>\r\n        </pre>\r\n    )\r\n}\r\n\r\nconst Renderers = {\r\n    blockquote: Blockquote,\r\n    code: Code\r\n}\r\n\r\nconst PostDetail = props => {\r\n\r\n    const { data, loading, error } = useFetch(api.posts.retrieve(props.postSlug)) // Custom hook\r\n\r\n    return (\r\n        <Container className='detail-container' >\r\n            {error && <Message color=\"red\" message={error} />}\r\n            {loading && <Loader />}\r\n            {data && (\r\n                <div>\r\n                    <Image className='detail-img' src={data.thumbnail} />\r\n                    <h1 className='detail-header'>{data.title}</h1>\r\n                    <h6 className='detail-date'> Last updated at{' '}\r\n                        {`${new Date(data.updated_at).toLocaleDateString()}`}\r\n                    </h6>\r\n\r\n                    \r\n                    <ReactMarkdown\r\n                        className='detail-content'\r\n                        source={data.problem}\r\n                        renderers={Renderers}\r\n                    />\r\n                    <ReactMarkdown\r\n                        className='detail-content'\r\n                        source={data.content}\r\n                        renderers={Renderers}\r\n                    />\r\n                    <Divider />\r\n                    {data.is_author && (\r\n                        <>\r\n                            <Link to={`/posts/${props.postSlug}/update`}>\r\n                                <Button className='btn-update btn'>Update</Button>\r\n                            </Link>\r\n                            <DeleteModal\r\n                                postSlug={props.postSlug}\r\n                                title={data.title}\r\n                                thumbnail={data.thumbnail}\r\n                            />\r\n                        </>\r\n                    )}\r\n                </div>\r\n            )}\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default PostDetail\r\n","import React, { useContext, useRef, useState } from 'react'\r\nimport { Button, Form, Image, Divider } from 'semantic-ui-react'\r\nimport MarkdownIt from 'markdown-it'\r\nimport MdEditor from 'react-markdown-editor-lite'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { api } from '../api'\r\nimport { authAxios, authenticationService } from \"../services\"\r\nimport { useFetch } from '../helpers'\r\nimport { navigate } from '@reach/router'\r\nimport Login from './Login';\r\nimport AuthContext from '../context/AuthContext';\r\nimport { Popover, Card, Collapse } from 'antd';\r\nimport { QuestionCircleOutlined } from '@ant-design/icons';\r\n\r\nconst PostUpdateForm = (\r\n    {\r\n        postSlug,\r\n        initialTitle,\r\n        initialDescription,\r\n        initialSolution,\r\n        initialThumbnail,\r\n        initialProblem,\r\n        initialTags,\r\n    }) => {\r\n\r\n    const [error, setError] = useState(null)\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const [title, setTitle] = useState(initialTitle)\r\n    const [description, setDescription] = useState(initialDescription);\r\n    const [tags, setTags] = useState(initialTags);\r\n    const [problem, setProblem] = useState(initialProblem);\r\n    const [solution, setSolution] = useState(initialSolution)\r\n    const [currentThumbnail, setCurrentThumbnail] = useState(initialThumbnail)\r\n    const [thumbnail, setThumbnail] = useState(null)\r\n\r\n    const fileInputRef = useRef()\r\n\r\n    const { auth } = useContext(AuthContext);\r\n    const { Panel } = Collapse;\r\n\r\n    const mdParser = new MarkdownIt(/* Markdown-it options */)\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault()\r\n        setLoading(true)\r\n\r\n        const formData = new FormData()\r\n        if (thumbnail) formData.append('thumbnail', thumbnail)\r\n        formData.append('title', title)\r\n        formData.append('description', description)\r\n        formData.append(\"problem\", problem)\r\n        formData.append(\"tags\", tags)\r\n        formData.append('content', solution)\r\n\r\n        authAxios\r\n            .put(api.posts.update(postSlug), formData, {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data',\r\n                }\r\n            })\r\n            .then(res => {\r\n                setLoading(false)\r\n                navigate('/')\r\n            })\r\n            .catch(err => {\r\n                setError(err.message || err)\r\n                setLoading(false)\r\n            })\r\n    }\r\n\r\n    if (!auth) {\r\n        console.log(authenticationService.isAuthenticated)\r\n        return <Login path='/login' />\r\n    }\r\n\r\n    function addIFrame() {\r\n        return {\r\n            __html: iframe\r\n        }\r\n    }\r\n\r\n    const iframe = '<iframe height=\"600px\" width=\"100%\" src=\"https://repl.it/@DotGrowen/Write-the-code?lite=true\" scrolling=\"no\" frameborder=\"no\" allowtransparency=\"true\" allowfullscreen=\"true\" sandbox=\"allow-forms allow-pointer-lock allow-popups allow-same-origin allow-scripts allow-modals\"></iframe>'\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h2 className=\"create-title\">Update your solution</h2>\r\n            {error && <Message color='red' message={error} />}\r\n            {currentThumbnail && <Image src={currentThumbnail} size='small' />}\r\n            <Divider />\r\n            <Card bordered={false} className='create-join' hoverable>\r\n                <Form onSubmit={handleSubmit}>\r\n\r\n\r\n                    <Form.Field>\r\n                        <p className=\"create-label text-white\">Title</p>\r\n                        <input\r\n                            value={title}\r\n                            onChange={e => setTitle(e.target.value)}\r\n                            placeholder='Title of your problem'\r\n                        />\r\n                    </Form.Field>\r\n                    <Form.Field>\r\n                        <p className=\"create-label text-white\">Description</p>\r\n                        <input\r\n                            value={description}\r\n                            onChange={e => setDescription(e.target.value)}\r\n                            placeholder='Short description for your problem'\r\n                        />\r\n                    </Form.Field>\r\n                    <Form.Field>\r\n                        <div className=\"d-flex align-items-center justify-content-between\">\r\n                            <p className=\"create-label text-white\">Tags</p>\r\n                            <Popover content={`Enter with spaces, not commas ( Python JavaScript C# )`} trigger=\"click\">\r\n                                <QuestionCircleOutlined className=\"text-white\" />\r\n                            </Popover>\r\n                        </div>\r\n\r\n                        <input\r\n                            value={tags}\r\n                            onChange={e => setTags(e.target.value)}\r\n                            placeholder='Add some tags'\r\n                        />\r\n                    </Form.Field>\r\n\r\n                    <Collapse className=\"panels\" bordered={false}>\r\n                        <Panel header=\"2. Create your solution\" key=\"2\">\r\n                            <Form.Field>\r\n                                <p className=\"create-label\">First solve the problem</p>\r\n                                <Card bordered={false} className='create-join' hoverable>\r\n                                    <textarea\r\n                                        rows=\"4\"\r\n                                        value={problem}\r\n                                        onChange={e => setProblem(e.target.value)}\r\n                                        placeholder='Enter Pseudocode'\r\n                                        className=\"textarea\"\r\n                                    />\r\n                                </Card>\r\n                            </Form.Field>\r\n                            <Form.Field>\r\n                                <p className=\"create-label\">Then write the code</p>\r\n                                <Card bordered={false} className='create-join' hoverable>\r\n                                    <div dangerouslySetInnerHTML={addIFrame()} />\r\n                                </Card>\r\n                            </Form.Field>\r\n                        </Panel>\r\n                        <Panel header=\"3. Save your work\" key=\"3\">\r\n                            <Form.Field>\r\n                                <p className=\"create-label\">Save your code here! <a href=\"https://guides.github.com/features/mastering-markdown/\">(Learn Markdown)</a></p>\r\n                                <Card bordered={false} className='create-join' hoverable>\r\n                                    <MdEditor\r\n                                        className=\"create-markdown\"\r\n                                        placeholder=\"\r\n                         Example code:\r\n                        ```\r\n                        import time\r\n                        # Quick, count to ten!\r\n                        for i in range(10):\r\n                        # (but not *too* quick)\r\n                        time.sleep(0.5)\r\n                        print(i)\r\n                        ```\r\n                        \"\r\n                                        value={solution}\r\n                                        style={{ height: \"500px\" }}\r\n                                        renderHTML={(text) => mdParser.render(text)}\r\n                                        onChange={({ text }) => setSolution(text)}\r\n                                    />\r\n                                </Card>\r\n                            </Form.Field>\r\n                            <Form.Field>\r\n                                <Button\r\n                                    fluid\r\n                                    type='button'\r\n                                    content='Choose a thumbnail'\r\n                                    labelPosition='left'\r\n                                    icon='file'\r\n                                    onClick={() => fileInputRef.current.click()}\r\n                                />\r\n                                {thumbnail && <Message color='blue' message={`Selected image ${thumbnail.name}`} />}\r\n                                <input\r\n                                    ref={fileInputRef}\r\n                                    type='file'\r\n                                    hidden\r\n                                    onChange={e => setThumbnail(e.target.files[0])}\r\n                                />\r\n                            </Form.Field>\r\n                            <Button primary fluid loading={loading} disabled={loading} type='submit'>Submit</Button>\r\n                        </Panel>\r\n                    </Collapse>\r\n\r\n                </Form>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst PostUpdate = props => {\r\n\r\n    const { data, loading, error } = useFetch(api.posts.retrieve(props.postSlug))\r\n\r\n    if (data && data.is_author === false) {\r\n        navigate(`/posts/${props.postSlug}`)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {error && <Message negative message={error} />}\r\n            {loading && <Loader />}\r\n            {data && (\r\n                <PostUpdateForm\r\n                    initialTitle={data.title}\r\n                    initialSolution={data.content}\r\n                    initialThumbnail={data.thumbnail}\r\n                    initialDescription={data.description}\r\n                    initialProblem={data.problem}\r\n                    initialTags={data.tags}\r\n                    postSlug={props.postSlug}\r\n                />\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PostUpdate\r\n","import React, { useContext, useState } from 'react';\r\nimport { Container } from 'semantic-ui-react'\r\nimport { Button, Card, Form, Input } from 'antd';\r\nimport { navigate } from \"@reach/router\"\r\nimport Message from '../components/Message';\r\nimport { authenticationService } from '../services'\r\nimport AuthContext from '../context/AuthContext';\r\nimport { UserOutlined, MailOutlined, LockOutlined, CheckCircleOutlined, EyeInvisibleOutlined, EyeTwoTone, } from '@ant-design/icons';\r\nimport PostList from './PostList';\r\n\r\n\r\n\r\nconst Signup = () => {\r\n\r\n    const [error, setError] = useState(null);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const [username, setUsername] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n\r\n    const { auth, setAuth } = useContext(AuthContext);\r\n\r\n    const handleSubmit = (e) => {\r\n        setLoading(true)\r\n        e.preventDefault()\r\n        authenticationService.signup(username, email, password, confirmPassword)\r\n            .then(res => {\r\n                localStorage.setItem(\"token\", res.data.key)\r\n                setLoading(false);\r\n                setAuth(true)\r\n                navigate('/')\r\n            })\r\n            .catch(error => {\r\n                setLoading(false)\r\n                setError(\"All fields are required\" || error)\r\n            })\r\n    }\r\n\r\n    if (auth) {\r\n        navigate('/')\r\n        return <PostList path='/'/>\r\n    }\r\n\r\n    return (\r\n        <Container text>\r\n            <Card bordered={false} className=\"join\" hoverable >\r\n                <h2 className=\"create-title\">Signup for an account</h2>\r\n                {error && (\r\n                    <Message color='red' message={error} />\r\n                )}\r\n                <Form\r\n                    name=\"basic\"\r\n                    initialValues={{ remember: true }}\r\n                    onFinish={handleSubmit}\r\n                >\r\n                    <Form.Item\r\n                        rules={[{ required: true, message: 'Please input your username!' }]}\r\n                    >\r\n                        <label className=\"create-label text-white\">Username</label>\r\n                        <Input\r\n                            type=\"text\"\r\n                            value={username}\r\n                            onChange={e => setUsername(e.target.value)}\r\n                            prefix={<UserOutlined />}\r\n                        />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Please input your email!'\r\n                            }\r\n                        ]}\r\n                    >\r\n                        <label className=\"create-label text-white\">Email</label>\r\n                        <Input\r\n                            type=\"email\"\r\n                            value={email}\r\n                            onChange={e => setEmail(e.target.value)}\r\n                            prefix={<MailOutlined />}\r\n                        />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Please input your password!'\r\n                            }\r\n                        ]}\r\n                    >\r\n                        <label className=\"create-label text-white\">Password</label>\r\n                        <Input.Password\r\n                            type=\"password\"\r\n                            value={password}\r\n                            onChange={e => setPassword(e.target.value)}\r\n                            prefix={<LockOutlined />}\r\n                            iconRender={visible => (visible ? <EyeTwoTone /> : <EyeInvisibleOutlined />)}\r\n                        />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Please confirm your password!'\r\n                            }\r\n                        ]}\r\n                    >\r\n                        <label className=\"create-label text-white\">Confirm Password</label>\r\n                        <Input.Password\r\n                            type=\"password\"\r\n                            value={confirmPassword}\r\n                            onChange={e => setConfirmPassword(e.target.value)}\r\n                            prefix={<CheckCircleOutlined />}\r\n                            iconRender={visible => (visible ? <EyeTwoTone /> : <EyeInvisibleOutlined />)}\r\n                        />\r\n                    </Form.Item>\r\n                    <Button \r\n                    type=\"primary\" \r\n                    htmlType=\"submit\" \r\n                    loading={loading} \r\n                    disabled={loading} \r\n                    onClick={handleSubmit}\r\n                    block>Signup</Button>\r\n                </Form>\r\n            </Card>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Signup;\r\n","import React, { useState } from 'react';\nimport 'semantic-ui-css/semantic.min.css'\nimport 'antd/dist/antd.css';\nimport { Router } from \"@reach/router\"\nimport Layout from './containers/Layout';\nimport PostList from './containers/PostList';\nimport PostCreate from './containers/PostCreate';\nimport PostDetail from './containers/PostDetail';\nimport PostUpdate from './containers/PostUpdate';\nimport Login from './containers/Login'\nimport Signup from './containers/Signup';\nimport AuthContext from './context/AuthContext'\nimport { authenticationService } from './services';\nimport \"./styles.css\"\nimport { createBrowserHistory } from 'history';\n\nconst history = createBrowserHistory()\n\nfunction App() {\n\n  const [auth, setAuth] = useState(authenticationService.isAuthenticated);\n\n  return (\n    <AuthContext.Provider value={{ auth, setAuth }}>\n      <Layout>\n        <Router history={history}>\n          <PostList exact path='/' />\n          <PostCreate path='/create' />\n          <PostUpdate path='/posts/:postSlug/update' />\n          <PostDetail exact path='/posts/:postSlug' />\n          <Login path='/login' />\n          <Signup path='/signup' />\n        </Router>\n      </Layout>\n    </AuthContext.Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  // <React.StrictMode>\n    <App />,\n  /* </React.StrictMode>, */\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}